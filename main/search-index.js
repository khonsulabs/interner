var searchIndex = JSON.parse('{\
"interner":{"doc":"interner","t":"IDLLLLLLLLLLLLLLLLLLLALLLLLLLLLLALLLLLGGGDGGDDDGLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLGGGGDGGLLLLLLLLLLLLLLLLLLLL","n":["PoolKind","Pooled","borrow","borrow_mut","clone","clone_into","cmp","deref","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","from","global","hash","into","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","ptr_eq","shared","to_owned","to_string","try_from","try_into","type_id","BufferPool","GlobalBuffer","GlobalPath","GlobalPool","GlobalString","PathPool","StaticPooledBuffer","StaticPooledPath","StaticPooledString","StringPool","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","get","get","get","get","get","get","get_static","get_static","get_static_with","get_static_with","get_static_with","into","into","into","into","new","pooled","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","with_capacity_and_hasher","with_capacity_and_hasher_init","with_hasher","with_hasher_init","BufferPool","PathPool","SharedBuffer","SharedPath","SharedPool","SharedString","StringPool","borrow","borrow_mut","clone","clone_into","default","eq","eq","fmt","from","get","get","get","into","pooled","to_owned","try_from","try_into","type_id","with_capacity_and_hasher","with_hasher"],"q":["interner","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","interner::global","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","interner::shared","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A kind of interning pool. Currently there are only two …","A type that ensures only one copy of each value exists in …","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Global interning pools.","","Calls <code>U::from(self)</code>.","","","","","","","","Returns true if <code>this</code> and <code>other</code> point to the exact same …","Shared interning pools that have no global state.","","","","","","A global byte buffer interning pool that manages …","A pooled buffer (<code>Vec&lt;u8&gt;</code>) that is stored in a <code>GlobalPool</code>.","A pooled path that is stored in a <code>GlobalPool</code>.","A global interned pool.","A pooled string that is stored in a <code>GlobalPool</code>.","A global path interning pool that manages <code>GlobalPath</code>s.","A lazily-initialized <code>GlobalBuffer</code> that stays allocated for …","A lazily-initialized <code>GlobalPath</code> that stays allocated for …","A lazily-initialized <code>GlobalString</code> that stays allocated for …","A global string interning pool that manages <code>GlobalString</code>s.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a copy of an existing <code>GlobalString</code> if one is found.","Returns a copy of an existing <code>GlobalBuffer</code> if one is found.","Returns a copy of an existing <code>GlobalPath</code> if one is found. …","Returns a reference-counted clone of the contained …","Returns a reference-counted clone of the contained …","Returns a reference-counted clone of the contained …","Returns a static pooled string, which keeps the pooled …","Returns a static pooled buffer, which keeps the pooled …","Returns a static pooled buffer, which keeps the pooled …","Returns a static pooled path, which keeps the pooled path …","Returns a static pooled string, which keeps the pooled …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns a new instance using <code>RandomState</code> for the internal …","Returns a collection of the currently pooled items.","","","","","","","","","","","","","Returns a new instance using the provided hasher with …","Returns a new instance using the function to load the …","Returns a new instance using the provided hasher.","Returns a new instance using the function to load the …","A path interning pool that manages <code>SharedBuffer</code>s.","A path interning pool that manages <code>SharedPath</code>s.","A pooled buffer that belongs to a <code>BufferPool</code>.","A pooled path that belongs to a <code>PathPool</code>.","A shared pool of values that ensures only one copy of any …","A pooled string that belongs to a <code>StringPool</code>.","A string interning pool that manages <code>SharedString</code>s.","","","","","","","","","Returns the argument unchanged.","Returns a copy of an existing <code>SharedBuffer</code> if one is …","Returns a copy of an existing <code>SharedPath</code> if one is found. …","Returns a copy of an existing <code>SharedString</code> if one is found.","Calls <code>U::from(self)</code>.","Returns a collection of the currently pooled items.","","","","","Creates a new pool using the provided <code>BuildHasher</code> for …","Creates a new pool using the provided <code>BuildHasher</code> for …"],"i":[0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,5,8,7,6,5,8,7,6,8,7,6,5,5,8,7,6,5,8,7,6,5,8,7,6,5,5,5,8,7,6,5,5,5,5,5,5,8,7,6,5,5,5,8,7,6,5,8,7,6,5,8,7,6,5,5,5,5,0,0,0,0,0,0,0,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16],"f":[0,0,[[]],[[]],[1,1],[[]],[[1,1],2],[1],[[1,1],3],[1,3],[[1,4],3],[1,3],[[[1,[5]],6],3],[[[1,[5]],7],3],[[[1,[5]],8],3],[[1,4],3],[[1,9],3],[[1,9],3],[[1,10],11],[[1,10],11],[[]],0,[1],[[]],[[1,4],[[12,[2]]]],[1,[[12,[2]]]],[[1,9],[[12,[2]]]],[1,[[12,[2]]]],[[1,1],[[12,[2]]]],[[1,4],[[12,[2]]]],[[1,9],[[12,[2]]]],[[1,1],3],0,[[]],[[],13],[[],14],[[],14],[[],15],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[8],[7],[6],[[5,16],3],[[5,5],3],[[8,1],3],[[7,1],3],[[6,1],3],[[5,10],11],[[8,10],11],[[7,10],11],[[6,10],11],[[]],[[]],[[]],[[]],[[[5,[13]]],17],[[[5,[[19,[18]]]]],20],[[[5,[21]]],22],[8,17],[7,20],[6,22],[[[5,[13]],9],8],[[[5,[[19,[18]]]]],7],[[[5,[[19,[18]]]]],7],[[[5,[21]]],6],[[[5,[13]]],8],[[]],[[]],[[]],[[]],[[],5],[5],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],15],[[],15],[[],15],[[],15],[23,5],[23,5],[[],5],[[],5],0,0,0,0,0,0,0,[[]],[[]],[16,16],[[]],[[],[[16,[24]]]],[[16,5],3],[[16,16],3],[[16,10],11],[[]],[[[16,[[19,[18]]]]],25],[[[16,[21]]],26],[[[16,[13]]],27],[[]],[16],[[]],[[],14],[[],14],[[],15],[23,[[16,[13]]]],[[],[[16,[13]]]]],"p":[[3,"Pooled"],[4,"Ordering"],[15,"bool"],[3,"Path"],[3,"GlobalPool"],[3,"StaticPooledPath"],[3,"StaticPooledBuffer"],[3,"StaticPooledString"],[15,"str"],[3,"Formatter"],[6,"Result"],[4,"Option"],[3,"String"],[4,"Result"],[3,"TypeId"],[3,"SharedPool"],[6,"GlobalString"],[15,"u8"],[3,"Vec"],[6,"GlobalBuffer"],[3,"PathBuf"],[6,"GlobalPath"],[15,"usize"],[3,"RandomState"],[6,"SharedBuffer"],[6,"SharedPath"],[6,"SharedString"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
